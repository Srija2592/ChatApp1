{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Projects\\\\ChatAppReactNodeSocket\\\\Client\\\\reactchat\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  socket,\n  username,\n  room\n}) {\n  _s();\n  const [currentMessage, setCurrentMeassage] = useState(\"\");\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"start typing...\",\n        onChange: event => {\n          setCurrentMeassage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"+O18xzPntk1t3XNNxqZcvMmlOFw=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","socket","username","room","_s","currentMessage","setCurrentMeassage","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Projects/ChatAppReactNodeSocket/Client/reactchat/src/Chat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nfunction Chat({socket,username,room}){\r\n    const [currentMessage,setCurrentMeassage]=useState(\"\");\r\n    const sendMessage=async ()=>{\r\n        if(currentMessage!==\"\"){\r\n            const messageData={\r\n                room:room,\r\n                author:username,\r\n                message:currentMessage,\r\n                time:new Date(Date.now()).getHours()+\":\"+new Date(Date.now()).getMinutes(),\r\n\r\n            };\r\n            await socket.emit(\"send_message\",messageData);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"chat-header\"><p>Live Chat</p></div>\r\n            <div className=\"chat-body\">\r\n                <input type=\"text\" placeholder=\"start typing...\" onChange={(event)=>{setCurrentMeassage(event.target.value)}}/>\r\n            </div><br/>\r\n            <div className=\"chat-footer\">\r\n                <button onClick={sendMessage}>&#9658;</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,IAAIA,CAAC;EAACC,MAAM;EAACC,QAAQ;EAACC;AAAI,CAAC,EAAC;EAAAC,EAAA;EACjC,MAAM,CAACC,cAAc,EAACC,kBAAkB,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMU,WAAW,GAAC,MAAAA,CAAA,KAAU;IACxB,IAAGF,cAAc,KAAG,EAAE,EAAC;MACnB,MAAMG,WAAW,GAAC;QACdL,IAAI,EAACA,IAAI;QACTM,MAAM,EAACP,QAAQ;QACfQ,OAAO,EAACL,cAAc;QACtBM,IAAI,EAAC,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAC,GAAG,GAAC,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;MAE7E,CAAC;MACD,MAAMd,MAAM,CAACe,IAAI,CAAC,cAAc,EAACR,WAAW,CAAC;IACjD;EACJ,CAAC;EACD,oBACIT,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAD,QAAA,eAAClB,OAAA;QAAAkB,QAAA,EAAG;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDvB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBlB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAAGC,KAAK,IAAG;UAACpB,kBAAkB,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAAA;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G,CAAC,eAAAvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXvB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAD,QAAA,eACxBlB,OAAA;QAAQ8B,OAAO,EAAEtB,WAAY;QAAAU,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAzBQJ,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA0Bb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}